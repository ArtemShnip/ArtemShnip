<UserControl x:Class="Project.Views.UserControlAllPrograms"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:Project.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <materialDesign:TransitioningContent x:Name="TrainsitionigContentSlide" OpeningEffect="{materialDesign:TransitionEffect SlideInFromLeft, Duration=0:0:0.8}">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                <DataGrid
                x:Name="AllPrograms"
                Margin="0,0,0,0"
                materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                materialDesign:DataGridAssist.ColumnHeaderPadding="8"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                CanUserResizeRows="False"
                CanUserSortColumns="True"
                ItemsSource="{Binding Programs}" FontFamily="AG_Souvenir" Height="452" Width="799">

            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Path=Id}" Header="ID" />
                <materialDesign:DataGridTextColumn Binding="{Binding Path=Name}" Header="Name" />
                <materialDesign:DataGridTextColumn
                        Binding="{Binding Path=Date}"
                        Header="Date"
                        MaxLength="255" />
                <materialDesign:DataGridTextColumn
                        Binding="{Binding Path=TimeStart, StringFormat={}{0:t},ConverterCulture=ru-RU}"
                        Header="Time start"
                        MaxLength="255" />
                <materialDesign:DataGridTextColumn
                        Binding="{Binding Path=TimeStop, StringFormat={}{0:t},ConverterCulture=ru-RU}"
                        Header="Time stop"
                        MaxLength="255" />
                <materialDesign:DataGridTextColumn
                        Width="100"
                        Binding="{Binding Path=LongTime}"
                        Header="Long time" />
                <materialDesign:DataGridTextColumn
                        Width="170"
                        Binding="{Binding Path=Client}"
                        Header="Client" />



                <!--<DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Right"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>-->

                <!--  use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo  -->
                <!--<materialDesign:DataGridComboBoxColumn Header="Client" IsEditable="True"
                                                               SelectedValueBinding="{Binding Client}">
                         Setting the editing element style allows access to all of the combo box's properties
                            <materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                                <Style TargetType="ComboBox" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ComboBox}, ResourceId=MaterialDataGridComboBoxColumnEditingStyle}}" >
                                    <Setter Property="IsEditable" Value="True" />
                                </Style>
                            </materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                    </materialDesign:DataGridComboBoxColumn>-->

            </DataGrid.Columns>
        </DataGrid>
            </StackPanel>
        </materialDesign:TransitioningContent>
    </Grid>
</UserControl>
